<?php

namespace App\Exports;

use Illuminate\Support\Collection;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Maatwebsite\Excel\Concerns\WithEvents;
use Maatwebsite\Excel\Events\AfterSheet;
use PhpOffice\PhpSpreadsheet\Style\Alignment;
use PhpOffice\PhpSpreadsheet\Style\Border;
use PhpOffice\PhpSpreadsheet\Style\Fill;
use PhpOffice\PhpSpreadsheet\Style\Font;

class CGSRenewalReportExport implements FromCollection, WithHeadings, WithEvents
{
    /**
     * @var Collection
     */
    protected $cooperatives;
    
    /**
     * @var object
     */
    protected $user;

    /**
     * Constructor
     * 
     * @param Collection $cooperatives
     * @param object $user
     */
    public function __construct(Collection $cooperatives, $user)
    {
        $this->cooperatives = $cooperatives;
        $this->user = $user;
    }

    /**
     * @return Collection
     */
    public function collection()
    {
        return $this->cooperatives;
    }

    /**
     * Define the column headings
     * 
     * @return array
     */
    public function headings(): array
    {
        return [
            'CDA Registration No',
            'Transport Cooperative Name',
            'Validity Date',
            'Accreditation No',
            'Region',
        ];
    }

    /**
     * Register events for styling the spreadsheet
     * 
     * @return array
     */
    public function registerEvents(): array
    {
        return [
            AfterSheet::class => function(AfterSheet $event) {
                $sheet = $event->sheet;

                // Insert title and user info
                $sheet->insertNewRowBefore(1, 5);

                // Title styling
                $sheet->mergeCells('A1:E1');
                $sheet->setCellValue('A1', 'CGS Renewal Report');
                $sheet->getStyle('A1')->applyFromArray([
                    'font' => [
                        'bold' => true, 
                        'size' => 16,
                        'name' => 'Arial',
                    ],
                    'alignment' => [
                        'horizontal' => Alignment::HORIZONTAL_CENTER,
                        'vertical' => Alignment::VERTICAL_CENTER,
                    ],
                ]);

                // Report metadata styling
                $metadataStyle = [
                    'font' => [
                        'italic' => true, 
                        'size' => 10,
                        'name' => 'Arial',
                    ],
                    'alignment' => [
                        'horizontal' => Alignment::HORIZONTAL_CENTER,
                    ],
                ];

                // Generation date
                $sheet->mergeCells('A2:E2');
                $sheet->setCellValue('A2', 'Generated on: ' . now()->format('F j, Y'));
                $sheet->getStyle('A2')->applyFromArray($metadataStyle);

                // Generated by user info
                $sheet->mergeCells('A3:E3');
                $sheet->setCellValue('A3', 'Generated by: ' . $this->user->employee_id_no . ' - ' . 
                                            $this->user->firstname . ' ' . $this->user->lastname);
                $sheet->getStyle('A3')->applyFromArray($metadataStyle);

                // User division and role info
                $sheet->mergeCells('A4:E4');
                $sheet->setCellValue('A4', 'Division: ' . $this->user->division . ' | Role: ' . 
                                          $this->user->role . ' | Email: ' . $this->user->email);
                $sheet->getStyle('A4')->applyFromArray($metadataStyle);

                // Add spacing row
                $sheet->getRowDimension(5)->setRowHeight(10);

                // Style header row
                $headerRowIndex = 6;
                $columns = range('A', 'E');
                
                // Apply header styling
                $sheet->getStyle("A{$headerRowIndex}:E{$headerRowIndex}")->applyFromArray([
                    'font' => [
                        'bold' => true,
                        'color' => ['rgb' => '000000'],
                        'size' => 11,
                    ],
                    'fill' => [
                        'fillType' => Fill::FILL_SOLID,
                        'startColor' => ['rgb' => 'E0E0E0'],
                    ],
                    'alignment' => [
                        'horizontal' => Alignment::HORIZONTAL_LEFT,
                        'vertical' => Alignment::VERTICAL_CENTER,
                    ],
                    'borders' => [
                        'allBorders' => [
                            'borderStyle' => Border::BORDER_THIN,
                            'color' => ['rgb' => '808080'],
                        ],
                    ],
                ]);
                
                // Set column widths
                $columnWidths = [
                    'A' => 20, // CDA Registration No
                    'B' => 40, // Transport Cooperative Name
                    'C' => 15, // Validity Date
                    'D' => 20, // Accreditation No
                    'E' => 15, // Region
                ];
                
                foreach ($columnWidths as $column => $width) {
                    $sheet->getColumnDimension($column)->setWidth($width);
                }
                
                // Style the data rows
                $lastRow = $sheet->getHighestRow();
                if ($lastRow > $headerRowIndex) {
                    $sheet->getStyle("A" . ($headerRowIndex + 1) . ":E{$lastRow}")->applyFromArray([
                        'borders' => [
                            'allBorders' => [
                                'borderStyle' => Border::BORDER_THIN,
                                'color' => ['rgb' => 'D0D0D0'],
                            ],
                        ],
                        'alignment' => [
                            'vertical' => Alignment::VERTICAL_CENTER,
                        ],
                    ]);
                    
                    // Add zebra striping
                    for ($row = $headerRowIndex + 1; $row <= $lastRow; $row++) {
                        if ($row % 2 == 0) {
                            $sheet->getStyle("A{$row}:E{$row}")->getFill()
                                ->setFillType(Fill::FILL_SOLID)
                                ->getStartColor()->setRGB('F9F9F9');
                        }
                    }
                }
            },
        ];
    }
}