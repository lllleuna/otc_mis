<?php

namespace App\Exports;

use App\Models\GeneralInfo;
use Illuminate\Support\Collection;
use Maatwebsite\Excel\Concerns\FromCollection;
use Maatwebsite\Excel\Concerns\WithHeadings;
use Maatwebsite\Excel\Concerns\WithStyles;
use Maatwebsite\Excel\Concerns\WithTitle;
use Maatwebsite\Excel\Concerns\WithEvents;
use Maatwebsite\Excel\Events\AfterSheet;

class AccreditationReportExport implements FromCollection, WithHeadings, WithStyles, WithTitle, WithEvents
{
    protected $cooperatives;
    protected $user;

    // Accept the filtered cooperatives and user data as parameters
    public function __construct(Collection $cooperatives, $user)
    {
        $this->cooperatives = $cooperatives;
        $this->user = $user;
    }

    public function collection()
    {
        // Return the filtered cooperatives data
        return $this->cooperatives;
    }

    /**
     * Define the column headers for the export
     *
     * @return array
     */
    public function headings(): array
    {
        return [
            'CDA Registration No',
            'Accreditation No',
            'Name',
            'Region',
            'City',
            'Status',
            'Accreditation Date',
        ];
    }

    /**
     * Apply styles to the Excel export.
     *
     * @return array
     */
    public function styles($sheet)
    {
        // Styling the header row
        $sheet->getStyle('A1:G1')->getFont()->setBold(true);
        $sheet->getStyle('A1:G1')->getFill()->setFillType('solid')->getStartColor()->setARGB('FFDDDDDD');
        $sheet->getStyle('A1:G1')->getAlignment()->setHorizontal(\PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_CENTER);

        // Adjust column width
        $sheet->getColumnDimension('A')->setWidth(20);
        $sheet->getColumnDimension('B')->setWidth(20);
        $sheet->getColumnDimension('C')->setWidth(30);
        $sheet->getColumnDimension('D')->setWidth(20);
        $sheet->getColumnDimension('E')->setWidth(20);
        $sheet->getColumnDimension('F')->setWidth(20);
        $sheet->getColumnDimension('G')->setWidth(25);

        return [];
    }

    /**
     * Set the title for the Excel sheet.
     *
     * @return string
     */
    public function title(): string
    {
        return 'Accreditation Report';
    }

    /**
     * After the sheet is created, add additional data such as the user who generated it.
     */
    public function registerEvents(): array
    {
        return [
            AfterSheet::class => function (AfterSheet $event) {
                // Add a title at the top of the sheet for the report
                $event->sheet->setCellValue('A1', 'Accreditation Report');
                $event->sheet->mergeCells('A1:G1');
                $event->sheet->getStyle('A1')->getFont()->setBold(true)->setSize(14);
                $event->sheet->getStyle('A1')->getAlignment()->setHorizontal(\PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_CENTER);

                // Add a row for the report generation date
                $event->sheet->setCellValue('A2', 'Generated on:');
                $event->sheet->setCellValue('B2', now()->format('F j, Y'));
                $event->sheet->getStyle('A2')->getFont()->setItalic(true)->setSize(10);

                // Add a row for the generated by information
                $event->sheet->setCellValue('A' . ($event->sheet->getHighestRow() + 2), 'Report Generated By:');
                $event->sheet->setCellValue('B' . ($event->sheet->getHighestRow() + 2), $this->user->firstname . ' ' . $this->user->lastname);
                $event->sheet->setCellValue('A' . ($event->sheet->getHighestRow() + 3), 'Employee ID No:');
                $event->sheet->setCellValue('B' . ($event->sheet->getHighestRow() + 3), $this->user->employee_id_no);
                $event->sheet->setCellValue('A' . ($event->sheet->getHighestRow() + 4), 'Division:');
                $event->sheet->setCellValue('B' . ($event->sheet->getHighestRow() + 4), $this->user->division);
                $event->sheet->setCellValue('A' . ($event->sheet->getHighestRow() + 5), 'Role:');
                $event->sheet->setCellValue('B' . ($event->sheet->getHighestRow() + 5), $this->user->role);
                $event->sheet->setCellValue('A' . ($event->sheet->getHighestRow() + 6), 'Email:');
                $event->sheet->setCellValue('B' . ($event->sheet->getHighestRow() + 6), $this->user->email);

                // Apply styles for the "Generated By" section
                $event->sheet->getStyle('A' . ($event->sheet->getHighestRow() + 2) . ':B' . ($event->sheet->getHighestRow() + 6))
                    ->getFont()->setItalic(true)->setSize(10);

                $event->sheet->getStyle('A' . ($event->sheet->getHighestRow() + 2) . ':B' . ($event->sheet->getHighestRow() + 6))
                    ->getAlignment()->setHorizontal(\PhpOffice\PhpSpreadsheet\Style\Alignment::HORIZONTAL_LEFT);
            },
        ];
    }
}
